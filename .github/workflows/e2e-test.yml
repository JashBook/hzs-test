name: E2E-TEST
on:
  push:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'release version'
        required: false
        default: ''

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  GO_VERSION: '1.19'
  HELM_VERSION: 'v3.10.0'


jobs:
  k3s-e2e-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        k3s: [ latest, v1.24, v1.23, v1.22 ]
    name: K3s ${{matrix.k3s}}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: setup k3s
        uses: nolar/setup-k3d-k3s@v1
        with:
          version: ${{ matrix.k3s }}
          github-token: ${{ env.GITHUB_TOKEN }}

      - name: install helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: install dbaas
        run: |
          RELEASE_VERSION=""
          if [[ -z "${{ github.event.inputs.release_version }}" ]];then
            RELEASE_VERSION=`bash ${{ github.workspace }}/.github/utils/release-version.sh ${{ env.GITHUB_TOKEN }}`
          else
            RELEASE_VERSION=${{ github.event.inputs.release_version }}
          fi
          echo "RELEASE_VERSION:"$RELEASE_VERSION
          
          helm repo add kubeblocks https://apecloud.github.io/helm-charts

          helm upgrade --install kubeblocks kubeblocks/kubeblocks \
            --version "$RELEASE_VERSION" \
            --set="prometheus.enabled=true" \
            --set="grafana.enabled=true" \
            --set="dashboards.enabled=true"
          
          helm list -a

      - name: setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: checkout testinfra
        uses: actions/checkout@v3
        with:
          repository: linghan-hub/testinfra
          path: testinfra
          token: ${{ env.GITHUB_TOKEN }}

      - name: run test
        run: |
          cd testinfra
          make test

  k8s-e2e-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        k8s: [ latest, v1.24.6, v1.23.12, v1.22.15 ]
    name: K8s ${{matrix.k8s}}
    timeout-minutes: 10
    env:
      K8S: ${{ matrix.k8s }}
    steps:
      - uses: actions/checkout@v3
      - name: install helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: install k8s
        run: |
          bash ${{ github.workspace }}/.github/utils/install-minikube.sh

      - name: install dbaas
        run: |
          RELEASE_VERSION=""
          if [[ -z "${{ github.event.inputs.release_version }}" ]];then
            RELEASE_VERSION=`bash ${{ github.workspace }}/.github/utils/release-version.sh ${{ env.GITHUB_TOKEN }}`
          else
            RELEASE_VERSION=${{ github.event.inputs.release_version }}
          fi
          echo "RELEASE_VERSION:"$RELEASE_VERSION
          
          helm repo add kubeblocks https://apecloud.github.io/helm-charts
          
          helm upgrade --install kubeblocks kubeblocks/kubeblocks \
            --version "$RELEASE_VERSION" \
            --set="prometheus.enabled=true" \
            --set="grafana.enabled=true" \
            --set="dashboards.enabled=true"
          
          helm list -a

      - name: setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: checkout testinfra
        uses: actions/checkout@v3
        with:
          repository: linghan-hub/testinfra
          path: testinfra
          token: ${{ env.GITHUB_TOKEN }}

      - name: run test
        run: |
          cd testinfra
          make test
