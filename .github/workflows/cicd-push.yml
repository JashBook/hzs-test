name: CICD-PUSH

on:
  push:
    branches:
      - '*'
      - '*/*'
    tags-ignore:
      - '*'


jobs:
  trigger-mode:
    runs-on: ubuntu-latest
    outputs:
      trigger-mode: ${{ steps.get_trigger_mode.outputs.trigger_mode }}
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu18.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
#          TRIGGER_MODE=`bash .github/utils/utils.sh --type 6`
#          echo $TRIGGER_MODE
#          echo trigger_mode=$TRIGGER_MODE >> $GITHUB_OUTPUT

#  pre-push:
#    needs: trigger-mode
#    runs-on: ubuntu-latest
#    name: Push Pre-Check
#    steps:
#      - uses: actions/checkout@v3
#      - name: Spell Check with Typos
#        if: contains(needs.trigger-mode.outputs.trigger-mode, '[docs]')
#        uses: crate-ci/typos@v1.13.14
#        with:
#          files: docs/
#          config: .github/utils/typos.toml
#
#  make-test:
#    needs: trigger-mode
#    runs-on: ubuntu-latest
#    if: contains(needs.trigger-mode.outputs.trigger-mode, '[test]')
#    steps:
#      - name: make test
#        run: echo ${{ needs.trigger-mode.outputs.trigger-mode }}
#
#  check-image:
#    needs: trigger-mode
#    if: contains(needs.trigger-mode.outputs.trigger-mode, '[docker]')
#    runs-on: ubuntu-latest
#    steps:
#      - name: check image
#        run: echo ${{ needs.trigger-mode.outputs.trigger-mode }}
#
#  check-helm:
#    needs: trigger-mode
#    if: contains(needs.trigger-mode.outputs.trigger-mode, '[deploy]')
#    runs-on: ubuntu-latest
#    steps:
#      - name: check helm
#        run: echo ${{ needs.trigger-mode.outputs.trigger-mode }}
