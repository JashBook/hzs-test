name: CICD-PUSH

on:
  workflow_dispatch:
    inputs:
      params:
        description: 'params'
        required: false
        default: ''
  push:
    branches:
      - '*'
      - '*/*'
    tags-ignore:
      - '*'

jobs:
  trigger-mode:
    runs-on: ubuntu-latest
    outputs:
      trigger-mode: ${{ steps.get_trigger_mode.outputs.trigger_mode }}
    steps:
      - name: Get trigger mode
        id: get_trigger_mode
        run: |
          TRIGGER_MODE="${{ inputs.params }}"
          echo trigger_mode=$TRIGGER_MODE >> $GITHUB_OUTPUT

  script:
    needs: trigger-mode
    runs-on: ubuntu-latest
    steps:
      - name : docs
        if: contains(needs.trigger-mode.outputs.trigger-mode, '|docs')
        shell: bash
        run: |
          echo "${{ needs.trigger-mode.outputs.trigger-mode }}"
      - name : github
        if: contains(needs.trigger-mode.outputs.trigger-mode, '|.github')
        shell: bash
        run: |
          echo "${{ needs.trigger-mode.outputs.trigger-mode }}"
      - name : docker
        if: contains(needs.trigger-mode.outputs.trigger-mode, '|docker')
        shell: bash
        run: |
          echo "${{ needs.trigger-mode.outputs.trigger-mode }}"
      - name : all
        if: contains(needs.trigger-mode.outputs.trigger-mode, '|all')
        shell: bash
        run: |
          echo "${{ needs.trigger-mode.outputs.trigger-mode }}"
          #          cr --help
          #          go version
          #          TAG_NAME="v0.14.1"
          #          echo "${TAG_NAME/v/}"
          #          CHAR_PATH="deploy/helm"
          #          echo "${CHAR_PATH%/*}"
          #          brew install skopeo
          #          skopeo sync -h



#  script:
#    runs-on: ubuntu-latest
#    container: apecloud/terraform-aws-cli:latest
#    steps:
#      - name: download runner latest
#        run: |
#          apt-get update
#          apt-get install -y -qq groff
#          aws ec2 delete-key-pair help


#  make-build:
#    if: startsWith(github.event.head_commit.message, 'Merge pull request') != true
#    runs-on: [ self-hosted, aws-ec2-k8s-runner ]
#    steps:
#      - uses: actions/checkout@v3
#      - name: make build
#        run: |
#          make mod-vendor
#          make lint
#          make
#  make-test:
#    if: startsWith(github.event.head_commit.message, 'Merge pull request') != true
#    runs-on: [ self-hosted, aws-ec2-k8s-runner ]
#    needs: [make-build]
#    steps:
#      - uses: actions/checkout@v3
#      - name: make test
#        run: |
#          make test
#      - name: upload cover result
#        uses: actions/upload-artifact@v3
#        with:
#          name: cover_result
#          path: cover.html
#  helm-test:
#    if: startsWith(github.event.head_commit.message, 'Merge pull request') != true
#    runs-on: [ self-hosted, aws-ec2-k8s-runner ]
#    needs: [ make-test ]
#    steps:
#      - uses: actions/checkout@v3
#      - name: helm test
#        run: |
#          make helm-test
