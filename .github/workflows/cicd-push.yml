name: CICD-PUSH

on:
  push:
    branches:
      - '*'
      - '*/*'
    tags-ignore:
      - '*'
env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

jobs:
  deploy:
    uses: JashBook/hzs-test/.github/workflows/trigger-workflow.yml@support/add_doc
    with:
      GITHUB_REPO: "test"
      BRANCH_NAME: "test"
      WORKFLOW_ID: "test"
    secrets: inherit

#  trigger-mode:
#    runs-on: ubuntu-latest
#    outputs:
#      trigger-mode: ${{ steps.get_trigger_mode.outputs.trigger_mode }}
#    steps:
#      - uses: actions/checkout@v3
##      - uses: uraimo/run-on-arch-action@v2
##        name: Run commands
##        id: runcmd
##        with:
##          arch: aarch64
##          distro: ubuntu_latest
##          githubToken: ${{ github.token }}
##          run: |
##            uname -a
##            echo ::set-output name=uname::$(uname -a)
##            apt-get update
##            apt-get install -y --no-install-recommends docker.io
##            docker pull busybox
##            docker inspect busybox
#      - name: Push cli doc changes
#        uses: ad-m/github-push-action@master
#        with:
#          github_token: ${{ env.GITHUB_TOKEN }}
#          branch: ${{ github.ref }}
#      - name: TRIGGER_MODE
#        run: |
#          TRIGGER_MODE=`bash .github/utils/utils.sh --type 6`
#          echo $TRIGGER_MODE
#          echo trigger_mode=$TRIGGER_MODE >> $GITHUB_OUTPUT

#  pre-push:
##    needs: trigger-mode
#    runs-on: ubuntu-latest
##    name: Push Pre-Check
#    steps:
#      - uses: actions/checkout@v3
#      - name: check image
#        run: |
#            bash .github/utils/utils.sh --type 7
##      - name: Spell Check with Typos
#        if: contains(needs.trigger-mode.outputs.trigger-mode, '[docs]')
#        uses: crate-ci/typos@v1.13.14
#        with:
#          files: docs/
#          config: .github/utils/typos.toml
#
#  make-test:
#    needs: trigger-mode
#    runs-on: ubuntu-latest
#    if: contains(needs.trigger-mode.outputs.trigger-mode, '[test]')
#    steps:
#      - name: make test
#        run: echo ${{ needs.trigger-mode.outputs.trigger-mode }}
#
#  check-image:
#    needs: trigger-mode
#    if: contains(needs.trigger-mode.outputs.trigger-mode, '[docker]')
#    runs-on: ubuntu-latest
#    steps:
#      - name: check image
#        run: echo ${{ needs.trigger-mode.outputs.trigger-mode }}
#
#  check-helm:
#    needs: trigger-mode
#    if: contains(needs.trigger-mode.outputs.trigger-mode, '[deploy]')
#    runs-on: ubuntu-latest
#    steps:
#      - name: check helm
#        run: echo ${{ needs.trigger-mode.outputs.trigger-mode }}
