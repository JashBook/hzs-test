apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kube-operator.fullname" . }}
  labels:
    {{- include "kube-operator.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kube-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kube-operator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kube-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: kube-rbac-proxy
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          # image: gcr.io/kubebuilder/kube-rbac-proxy:v0.12.0
          image: jashbook/kube-rbac-proxy:v0.11.0
          args:
          - "--secure-listen-address=0.0.0.0:8443"
          - "--upstream=http://127.0.0.1:8080/"
          - "--logtostderr=true"
          - "--v=0"
          ports:
            - containerPort: 8443
              protocol: TCP
              name: metrics
        - name: manager
#          args:
#          - "--health-probe-bind-address=:8081"
#          - "--metrics-bind-address=127.0.0.1:8080"
#          - "--leader-elect"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "123456"
          ports:
            - name: webhook-server
              containerPort: 3306
              protocol: TCP
#            - name: webhook-server
#              containerPort: 9443
#              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /healthz
#              port: health
#            initialDelaySeconds: 15
#            periodSeconds: 20
#          readinessProbe:
#            httpGet:
#              path: /readyz
#              port: health
#            initialDelaySeconds: 5
#            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- if .Values.admissionWebhooks.enabled }}
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: manager-config
        configMap:
          name: manager-config
      {{- if .Values.admissionWebhooks.enabled }}
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ include "kube-operator.fullname" . }}.{{ template "kube-operator.namespace" . }}.svc.tls-pair
      {{- end }}
